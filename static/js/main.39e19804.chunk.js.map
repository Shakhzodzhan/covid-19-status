{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Footer/Footer.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","active","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","gutterBottom","start","end","value","duration","separator","Date","toDateString","loading","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","StickyFooter","footer","year","getFullYear","copyright","href","App","state","fetchedData","setState","this","virusTitle","subTitle","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39e19804.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"loading\":\"Cards_loading__3BC6P\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from './Cards.module.css'\nimport CountUp from \"react-countup\";\nimport cx from 'classnames'\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate, active } }) => {\n    if (!confirmed) {\n        return (\n            <span className={styles.loading}>Loading...</span>\n        )\n    }\n    console.log(active);\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" variant=\"h4\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={3} separator={\".\"} />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" variant=\"h4\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2} separator={\".\"} />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" variant=\"h4\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={1} separator={\".\"} />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n};\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n\n    try {\n        const {data: {confirmed, recovered, deaths, lastUpdate, active}} = await axios.get(changeableUrl);\n        return {confirmed, recovered, deaths, lastUpdate, active};\n    } catch (error) {\n        console.log(error)\n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n            active: dailyData.active.total\n        }));\n\n        return modifiedData;\n    } catch (error) {\n\n    }\n};\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: {countries}} = await axios.get(`${url}/countries`)\n\n        return countries.map((country) => country.name)\n    } catch (error) {\n        console.log(error)\n    }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from './Chart.module.css'\n\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData())\n        };\n\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length\n            ? (\n                <Line data={{\n                    labels: dailyData.map(({ date }) => date), datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#FFDC00',\n                        backgroundColor: 'rgba(100, 93, 0, 0.1)',\n                        fill: true\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: '#FF4136',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                        fill: true\n                    }],\n                }}\n                />) : null\n    );\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar\n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: ['#FFDC00', '#01FF70', '#FF4136'],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        title: { display: true, text: `Current state in ${country}` }\n                    }}\n                />\n            ) : null\n    );\n\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n};\n\nexport default Chart;","import React, {useState, useEffect} from \"react\";\nimport {NativeSelect, FormControl, Typography} from \"@material-ui/core\";\nimport styles from './CountryPicker.module.css'\nimport {fetchCountries} from \"../../api\";\n\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([])\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries())\n        };\n        fetchAPI()\n    }, [setFetchedCountries]);\n\n\n\n    return (\n        <FormControl className={styles.formControl}>\n            <Typography color=\"textSecondary\">Please choose your country or region📍</Typography>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n\n    )\n};\n\nexport default CountryPicker;","import React from 'react';\nimport styles from \"./Footer.module.css\"\n\nfunction StickyFooter() {\n    const copyright = () => {\n        let year = new Date().getFullYear();\n        return (<div>Copyright © Covid-19 Status {year}</div>)\n    };\n\n    const devProfile = () => {\n        return (<div>Find me on <a href=\"https://dev.to/shakhzodzhan\" target=\"_blank\">Dev.to🤖</a></div>)\n    };\n\n    return (\n        <footer className={styles.footer}>\n            <div>STAY AT HOME🏠 Created by Shakhzod Kholikov👨🏻‍💻</div>\n            {copyright()}\n            {devProfile()}\n        </footer>\n\n    );\n}\n\nexport default StickyFooter;","import React from \"react\";\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\nimport styles from './App.module.css';\nimport { fetchData } from \"./api\";\nimport StickyFooter from \"./components/Footer/Footer\";\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    };\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n\n        this.setState({ data: fetchedData, country: country });\n        console.log(fetchedData)\n    }\n\n\n    render() {\n        const { data, country } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <h3 className={styles.virusTitle}>C🦠VID-19 ONLINE STATUS</h3>\n                <h5 className={styles.subTitle}>Stay at Home🏠</h5>\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Cards data={data} />\n                <Chart data={data} country={country} />\n                <StickyFooter />\n            </div>\n        )\n    }\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"virusTitle\":\"App_virusTitle__2E46W\",\"subTitle\":\"App_subTitle__1-mhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};"],"sourceRoot":""}